#Configure The CI/CD Pipeline to automate the build/validate/deploy h2o-wave docker image steps.

name: Sonarqube and H2o images build test
on: workflow_dispatch

jobs:
  build-sonarqube-image:
    runs-on: self-hosted
    env:
        RESOURCE_GROUP_NAME: BorisDundakov_RG_FinalProject
        CONTAINER_REG_NAME: borisdundakovwebapp
        IMAGE_NAME: sonarqube-with-prometheus
        AKS_NAME: VM_Cluster


    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3
      
      - name: Build docker image
        run: |
              sudo usermod -aG docker $USER
              docker build  -t $IMAGE_NAME ./sonarqube       
      - name: Install Azure cli
        run: |
          sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
          curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
          AZ_REPO=$(lsb_release -cs)
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-get update
          sudo apt-get install azure-cli
      - name: Az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      # - name: Create container registry
      #   run: |
      #         az acr create --resource-group $RESOURCE_GROUP_NAME --name $CONTAINER_REG_NAME --sku Basic

      - name: Log in to container registry
        run: |
              az acr login --name $CONTAINER_REG_NAME
      
      - name: Tag container image
        run: |
              docker tag $IMAGE_NAME $CONTAINER_REG_NAME.azurecr.io/$IMAGE_NAME_test:v.1.0.0
      - name: Push the container image
        run: |
              docker push $CONTAINER_REG_NAME.azurecr.io/$IMAGE_NAME_test:v.1.0.0
      # - name: Attach acr credentials #DOESN'T WORK FROM Here--> Only from Azure website UI!!!
      #   run: |
      #         az aks update -n $AKS_NAME -g $RESOURCE_GROUP_NAME --attach-acr $CONTAINER_REG_NAME


  build-h2o-image:
    runs-on: self-hosted
    env:
        RESOURCE_GROUP_NAME: BorisDundakov_RG_FinalProject
        CONTAINER_REG_NAME: borisdundakovwebapp
        IMAGE_NAME: h2o-wave-app
        AKS_NAME: VM_Cluster


    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3
      
      - name: Build docker image
        run: |
              sudo usermod -aG docker $USER
              docker build  --build-arg PYTHON_VERSION=3.8 \
              --build-arg WAVE_VERSION=0.25.2 \
              --build-arg PYTHON_MODULE="wave-heroku/ai_app/app.py" \
              -t $IMAGE_NAME ./wave-heroku       
      - name: Install Azure cli
        run: |
          sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
          curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
          AZ_REPO=$(lsb_release -cs)
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-get update
          sudo apt-get install azure-cli
      - name: Az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      - name: Log in to container registry
        run: |
              az acr login --name $CONTAINER_REG_NAME
      
      - name: Tag container image
        run: |
              docker tag $IMAGE_NAME $CONTAINER_REG_NAME.azurecr.io/$IMAGE_NAME_test:v.1.0.3
      - name: Push the container image
        run: |
              docker push $CONTAINER_REG_NAME.azurecr.io/$IMAGE_NAME_test:v.1.0.3
